class Nodo:
    def __init__(self, valor, hijos=None):
        self.valor = valor
        self.hijos = [] if hijos is None else hijos

    def agregar_hijo(self, hijo):
        self.hijos.append(hijo)
 
    def __str__(self):
        return str(self.valor)

def construir_arbol(expresion):
    tokens = expresion.split()
    return construir_arbol_aux(tokens)

def construir_arbol_aux(tokens):
    if not tokens:
        return None

    valor_actual = tokens.pop(0)
    nodo_actual = Nodo(valor_actual)

    if valor_actual in ["S", "A", "B", "C", "D"]:  
        for _ in range(2):  
            hijo = construir_arbol_aux(tokens)
            if hijo:
                nodo_actual.agregar_hijo(hijo)

    return nodo_actual

def imprimir_arbol(nodo, nivel=0):
    print("  " * nivel + str(nodo.valor))
    for hijo in nodo.hijos:
        imprimir_arbol(hijo, nivel + 1)

def main():
    expresion = "S A B C D"
    arbol = construir_arbol(expresion)
    imprimir_arbol(arbol)

if __name__ == "__main__":
    main()
